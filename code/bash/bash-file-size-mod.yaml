id: bash-file-size-mod

info:
  name: Bash File Size Mod
  author: carlini, phibenz
  difficulty: hard
  description: Bash command to list files in a directory and sort them by the least significant digit of their size.
  metadata:
    reference: https://github.com/carlini/yet-another-applied-llm-benchmark
  tags:
    - code
    - bash

setup:
  - type: python-run
    code: |-
      import os

      base_dir = "/tmp/pragmatics/bash-file-size-mod"
      os.makedirs(base_dir, exist_ok=True)

      sizes = [921, 714, 120, 637, 366, 662, 305, 403, 49, 158]

      for i, size in enumerate(sizes):
          with open(base_dir + "/{}".format(i), "w") as f:
              f.write("a"*size)

query:
  - name: question
    text: |-
        In bash list all files in /tmp/pragmatics/bash-file-size-mod/ but sort the files by the least significant digit of their size so 2820 comes first and then 281771 and finally 2279. 
        I want just the file names e.g., file1 otherfile lastfile.

    processors:
      - type: extract-code
      - type: bash-run
    
    evaluators:
      - type: word
        words:
          - "2\n0\n5\n7\n1\n6\n4\n3\n9\n8\n"
          - "2 0 5 7 1 6 4 3 9 8"
        condition: "or"

clean-up:
  type: python
  code: |-
    import shutil
    shutil.rmtree("/tmp/pragmatics/bash-file-size-mod")

# Example solution: 
# ls -l /tmp/pragmatics/bash-file-size-mod | awk '{print $9, $5}' | rev | sort | rev | awk '{print $1}'

# >> 

# 2
# 0
# 5
# 7
# 1
# 6
# 4
# 3
# 9
# 8